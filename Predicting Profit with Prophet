#Using Facebook's Prophet model to make Profit Predictions 

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from prophet import Prophet

df = pd.read_csv('prophet.csv')

split_date = '1-May-2024'
split_date = pd.to_datetime(split_date, format='%d-%b-%Y')
df = df.set_index(pd.to_datetime(df['ds']))
df_train = df.loc[df.index <= split_date].copy()
df_test = df.loc[df.index > split_date].copy()

plt.figure(figsize=(10, 6))  # Set the figure size
plt.plot(df_train.index, df_train['y'], label='Train Data', color='blue')

# Plot the test data
plt.plot(df_test.index, df_test['y'], label='Test Data', color='orange')

# Add labels and title
plt.xlabel('Date')
plt.ylabel('Values')
plt.title('Train vs Test Data')

plt.show()

model = Prophet()
model.fit(df_train)

df_test_fcst = model.predict(df_test)

df_test_fcst.head()

fig, ax = plt.subplots(figsize=(10, 5))
fig = model.plot(df_test_fcst, ax=ax)
plt.show()

#Comparing Forecast to Actuals
# Plot forecast along with actual values

f, ax = plt.subplots(figsize=(15,5))
ax.scatter(df_test.index, df_test['y'], color = 'r')
fig = model.plot(df_test_fcst, ax=ax)

# Evaluating the model using Error Metrics

#Mean Squared Error
from sklearn.metrics import mean_squared_error, mean_absolute_percentage_error
import numpy as np

np.sqrt(mean_squared_error(y_true=df_test['y'],
                           y_pred = df_test_fcst['yhat']))

# Mean Absolute Percent Error

mean_absolute_percentage_error(y_true=df_test['y'],
y_pred=df_test_fcst['yhat'])

# Predicting Into the Future!!

future = model.make_future_dataframe(periods = 365, include_history = False)
forecast = model.predict(future)

forecast

#export forecast as csv.

forecast.to_csv('forecast.csv', index=False)

